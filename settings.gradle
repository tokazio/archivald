/*
plugins {
  id "com.gradle.enterprise" version "3.15.1"
}

gradleEnterprise {
  buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"
    publishAlways() // <- can be publishIf to conditionnaly publish
    allowUntrustedServer = true
    uploadInBackground = false // <- !important publish before stopping the container
    buildScanPublished { scan ->
      println(scan.buildScanUri) // <- display the report url
    }
  }
}
*/

enableFeaturePreview "STABLE_CONFIGURATION_CACHE"

buildCache {
    local {
        // Set local build cache directory.
        directory = "${settingsDir}/.gradle/caches/build-cache-1"
        println("local build cache at ${directory}")
    }
}

rootProject.name = 'archivald'

includeBuild('annotations') {
    name = "annotations"
}
// Archivald konsist api
includeBuild('konsist') {
    name = "konsist"
}
// Archivald archunit api
includeBuild('archunit') {
    name = "archunit"
}
includeBuild('internal-processor') {
    name = "internal-processor"
}
// Archivald ksp processor (konsist and archunit)
includeBuild('ksp-processor') {
    name = "ksp-processor"
}
// Archivald java annotation processor (konsist and archunit)
includeBuild('jap-processor') {
    name = "jap-processor"
}
includeBuild('konsist-processor') {
    name = "konsist-processor"
}
includeBuild('archunit-processor') {
    name = "archunit-processor"
}
// Archivald standard rules (konsist and archunit)
includeBuild('standard-rules') {
    name = "standard-rules"
}
includeBuild('konsist-ksp-example-project') {
    name = "konsist-ksp-example-project"
}