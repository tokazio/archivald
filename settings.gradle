/*
plugins {
  id "com.gradle.enterprise" version "3.15.1"
}

gradleEnterprise {
  buildScan {
    termsOfServiceUrl = "https://gradle.com/terms-of-service"
    termsOfServiceAgree = "yes"
    publishAlways() // <- can be publishIf to conditionnaly publish
    allowUntrustedServer = true
    uploadInBackground = false // <- !important publish before stopping the container
    buildScanPublished { scan ->
      println(scan.buildScanUri) // <- display the report url
    }
  }
}
*/

enableFeaturePreview "STABLE_CONFIGURATION_CACHE"

buildCache {
    local {
        // Set local build cache directory.
        directory = "${settingsDir}/.gradle/caches/build-cache-1"
        println("local build cache at ${directory}")
    }
    /*
    remote(HttpBuildCache) {
        push = true
        allowInsecureProtocol = true
        url = providers.environmentVariable("CI_GRADLE_REMOTE_CACHE_URL").getOrElse('http://gradle-remote-cache.defaultadm.whoz.lan/cache/')
        credentials {
            username = providers.environmentVariable("CI_GRADLE_REMOTE_CACHE_USERNAME").getOrNull()
            password = providers.environmentVariable("CI_GRADLE_REMOTE_CACHE_PASSWORD").getOrNull()
        }
    }
     */
}

rootProject.name = 'konsistksp'

includeBuild('annotations') {
    name = "konsistksp-annotations"
}
includeBuild('processor') {
    name = "konsistksp-processor"
}
includeBuild('standard-rules') {
    name = "konsistksp-standard-rules"
}
includeBuild('example-project') {
    name = "konsistksp-example-project"
}
