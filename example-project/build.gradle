plugins {
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.ksp)
}

group = 'fr.tokazio.konsistksp'
version = 'undefined'

jar {
    enabled = false
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    //testCompileOnly "com.lemonappdev:konsist:${libs.versions.konsist.version.get()}"

    testImplementation "fr.tokazio.konsistksp:konsistksp-annotations:${libs.versions.me.version.get()}"
    ksp "fr.tokazio.konsistksp:konsistksp-processor:${libs.versions.me.version.get()}"

//    testRuntimeOnly "org.junit.platform:junit-platform-commons:${libs.versions.junit.platform.version.get()}"
//    testRuntimeOnly "org.junit.platform:junit-platform-engine:${libs.versions.junit.platform.version.get()}"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:${libs.versions.kotest.version.get()}"
    testImplementation "io.kotest:kotest-assertions-core:${libs.versions.kotest.version.get()}"

}

kotlin {
    jvmToolchain(libs.versions.jvm.version.get().toInteger())
}

ksp {
    arg("konsistKspProjectBase", projectDir.absolutePath)
    arg("konsistKspClasspath", configurations.testCompileClasspath.asPath)
    arg("konsistKspDebug", "true")
}

// To compile src/rules independently of the main compilation
// compilation here is not mandatory but it allow to see compilation errors
// before the konsist ksp dynamic compilation step
sourceSets.test.java.srcDirs += ['src/rules']

test {
    useJUnitPlatform()
}